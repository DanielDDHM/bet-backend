datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "linux-musl"]
  previewFeatures = ["mongodb"]
}

model users {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  nick        String    @unique
  name        String
  email       String    @unique
  phone       String
  password    String
  photo       String?
  isActive    Boolean?  @default(true)
  isConfirmed Boolean?  @default(false)
  isStaff     Boolean?  @default(false)
  address     address?  @relation(fields: [addressId], references: [id])
  addressId   String?   @db.ObjectId
  bets        bets[]
  gameOwn     game[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @default(now())
}

model address {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  streetNumber Int
  zipCode      String
  street       String?
  neighborhood String?
  city         String?
  state        String?
  users        users[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @default(now())
}

model bets {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  value     String
  bet       Int
  status    String?   @default("PENDING")
  winner    Boolean?  @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now())
  users     users?    @relation(fields: [usersId], references: [id])
  usersId   String?   @db.ObjectId
  game      game?     @relation(fields: [gameId], references: [id])
  gameId    String?   @db.ObjectId
}

model game {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  owner      users?    @relation(fields: [ownerId], references: [id])
  winner     String?
  sortDate   DateTime
  bets       bets[]
  prize      String
  prizePhoto String?
  isActive   Boolean?  @default(true)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @default(now())
  ownerId    String?   @db.ObjectId
}
